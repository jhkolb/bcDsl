contract Auction2 {
    data {
      Seller: Identity
      HighestBidder: Identity
      HighestBid: Int
      AuctionStart: Timestamp
      Duration: Timespan
      Balances: Mapping[Identity, Int]
    }

    initialize: ->(duration: Timespan) open {
        Seller = sender
        HighestBid = 0
        AuctionStart = now
        Duration = duration
    }


    submitBid: open ->(tokens: Uint) open
    requires [ tokens > HighestBid ] {
        Balances[HighestBidder] = Balances[HighestBidder] + HighestBid
        HighestBidder = sender
        HighestBid = tokens
    }

    auto closeAuction: open -> closed requires [ now - AuctionStart >= Duration ]

    withdraw: closed -> closed requires [ Balances[sender] > 0 ] {
        send Balances[sender] to sender
        Balances[sender] = 0
    }
}

properties {
    [](balance >= 0)
    [](<>(closed))
}
